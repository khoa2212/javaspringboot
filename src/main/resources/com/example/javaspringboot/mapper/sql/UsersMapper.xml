<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.javaspringboot.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.example.javaspringboot.model.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    <id column="users_id" jdbcType="CHAR" property="usersId" />
    <result column="users_name" jdbcType="VARCHAR" property="usersName" />
    <result column="email" jdbcType="CHAR" property="email" />
    <result column="users_password" jdbcType="CHAR" property="usersPassword" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    users_id, users_name, email, users_password
  </sql>
  <select id="selectByExample" parameterType="com.example.javaspringboot.model.UsersExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userspeople
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    select 
    <include refid="Base_Column_List" />
    from userspeople
    where users_id = #{usersId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    delete from userspeople
    where users_id = #{usersId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.javaspringboot.model.UsersExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    delete from userspeople
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.javaspringboot.model.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    insert into userspeople (users_id, users_name, email, 
      users_password)
    values (#{usersId,jdbcType=CHAR}, #{usersName,jdbcType=VARCHAR}, #{email,jdbcType=CHAR}, 
      #{usersPassword,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.javaspringboot.model.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    insert into userspeople
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="usersId != null">
        users_id,
      </if>
      <if test="usersName != null">
        users_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="usersPassword != null">
        users_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="usersId != null">
        #{usersId,jdbcType=CHAR},
      </if>
      <if test="usersName != null">
        #{usersName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=CHAR},
      </if>
      <if test="usersPassword != null">
        #{usersPassword,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.javaspringboot.model.UsersExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    select count(*) from userspeople
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    update userspeople
    <set>
      <if test="row.usersId != null">
        users_id = #{row.usersId,jdbcType=CHAR},
      </if>
      <if test="row.usersName != null">
        users_name = #{row.usersName,jdbcType=VARCHAR},
      </if>
      <if test="row.email != null">
        email = #{row.email,jdbcType=CHAR},
      </if>
      <if test="row.usersPassword != null">
        users_password = #{row.usersPassword,jdbcType=CHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    update userspeople
    set users_id = #{row.usersId,jdbcType=CHAR},
      users_name = #{row.usersName,jdbcType=VARCHAR},
      email = #{row.email,jdbcType=CHAR},
      users_password = #{row.usersPassword,jdbcType=CHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.javaspringboot.model.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    update userspeople
    <set>
      <if test="usersName != null">
        users_name = #{usersName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="usersPassword != null">
        users_password = #{usersPassword,jdbcType=CHAR},
      </if>
    </set>
    where users_id = #{usersId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.javaspringboot.model.Users">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 03 12:08:44 GMT+07:00 2022.
    -->
    update userspeople
    set users_name = #{usersName,jdbcType=VARCHAR},
      email = #{email,jdbcType=CHAR},
      users_password = #{usersPassword,jdbcType=CHAR}
    where users_id = #{usersId,jdbcType=CHAR}
  </update>
</mapper>